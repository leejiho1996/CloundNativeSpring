name: Commit Stage
on: push

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: catalogdb
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd "pg_isready -U test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4  # 현재 깃 저장소 체크아웃
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle
      - name: Build, unit tests and integration tests
        run: |
            chmod +x gradlew
            ./gradlew build
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v4 # 그라이프를 이용해 스캔
        id: scan # 현재 단계의 식별자를 할당하고 이후의 단계에서 참고 가능
        with:
          path: "${{ github.workspace }}" # 체크아웃 저장소 경로
          fail-build: false # 보안 취약성 발견시 빌드 실패 여부
          severity-cutoff: high # 보안 유형
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3 # 깃허브로 보안 취약성 리포트 전송
        if: success() || failure() # 이전 단계가 실패해도 전송
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
    env:
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/catalogdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password